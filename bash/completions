__source_if_exists "/usr/local/etc/bash_completion.d/git-completion.bash"
__add_completion "fabric-completion/fabric-completion.bash"

# Git completions for our aliases
complete -o default -o nospace -F _git g
complete -o default -o nospace -F _git_diff gd
complete -o default -o nospace -F _git_log gl
complete -o default -o nospace -F _git_checkout gco

# Completion for Homebrew
if ( __is_osx ); then
    if [[ -n `__which brew` ]]; then
        __source_if_exists "`brew --prefix`/Library/Contributions/brew_bash_completion.sh"
    fi
fi

# Completion for pip
# You can also use command like:
#   [[ -n `which pip` ]] && eval "`pip completion --bash`"
# But it's too slow for me.
function _pip_completion() {
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 ) )
}
complete -o default -F _pip_completion pip

# Completion for alias "c".
function __code_dir_complete() {
    local cur="$2"
    COMPREPLY=( $(cd ~/code && compgen -d -- "${cur}" ) )
}
complete -o default -o nospace -F __code_dir_complete c

# Completion for alias "ce".
function __code_ext_dir_complete() {
    local cur="$2"
    COMPREPLY=( $(cd ~/code_ext && compgen -d -- "${cur}" ) )
}
complete -o default -o nospace -F __code_ext_dir_complete ce

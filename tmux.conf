# Mac OS X clipboard integration
set -g default-command "reattach-to-user-namespace -l bash"

# Act like screen
unbind C-b
set -g prefix C-a

# Ensure that we can send Ctrl-A to other apps
bind-key a send-prefix
bind-key -n C-\ send-prefix

# Splitting panes and change to current directory
bind | split-window -c '#{pane_current_path}' -h
bind \ split-window -c '#{pane_current_path}' -h
bind - split-window -c '#{pane_current_path}' -v

# Open new windows in the current directory
bind c new-window -c '#{pane_current_path}'

# Open new window and set name for it
bind C command-prompt -p name: "new-window -c '#{pane_current_path}' -n '%1'"

# Navigate between panes like Vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resizing panes
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# Cycle through the windows
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Switch to last visited window
bind C-a last-window

# Cycle through the sessions
bind-key -r C-j switch-client -n
bind-key -r C-k switch-client -p

# Enable Vim keybindings in copy mode
setw -g mode-keys vi

# Set Vim keys for copy mode
bind-key -t vi-copy v begin-selection
bind -t vi-copy V rectangle-toggle
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Use up and down arrows for temporary "maximize"
unbind Up; bind Up resize-pane -Z
unbind Down; bind Down resize-pane -Z

# Move current window
unbind Left; bind Left swap-window -t -1
unbind Right; bind Right swap-window -t +1

# Reload tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Open man in new pane
bind m command-prompt -p man: "split-window -h 'man %1'"

# Use 256 colour terminal
set -g default-terminal "screen-256color"

# Set the default input delay to improve Vim performance
set -sg escape-time 0

# Increase scrollback lines
set -g history-limit 30000

# Window index start at 1
set -g base-index 1

# Pane index start at 1
setw -g pane-base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Allow mouse scrolling and selecting
# set -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on

# UTF-8 support in the status bar
set -g status-utf8 on

# Status line colors
set -g status-fg white
set -g status-bg black

# Color of the window list
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# Colors for the active window
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# Command / message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Centering the Window List
set -g status-justify centre

# Status line left side
set -g status-left-length 40
# set -g status-left "#[fg=green][#{session_name}] #[fg=yellow]#{window_index} #[fg=cyan]#{pane_index}"
# set -g status-left "#[fg=green][#{host_short}#[fg=white]-#[fg=green]#{session_name}]"
set -g status-left "#[fg=green][#{session_name}]"

# Status line right side
# set -g status-right "#[fg=cyan][#{host_short}] #[fg=white][%d %b %H:%M]"
set -g status-right "#[fg=white]%d %b %H:%M"

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
set -g visual-content on

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restoring Clear Screen
bind C-l send-keys 'C-l'

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
